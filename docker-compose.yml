version: "3.3"

services:
  spotmusic-api:
    build:
      context: ./spotmusic-api
    ports:
      - "5000:5000"
    environment:
      - FASTAPI_ENV=development
    # Caso necessário, adicione outras configurações necessárias para a aplicação FastAPI

  spotmusic-web:
    build:
      context: ./spotmusic-web
      dockerfile: music-web.Dockerfile
    ports:
      - "3000:3000"
    # Caso necessário, adicione outras configurações necessárias para a aplicação ReactJS
  
  spotmusic-web-bff:
    build:
      context: ./spotmusic-web
      dockerfile: music-bff.Dockerfile
    ports:
      - "3001:3000"
    # Caso necessário, adicione outras configurações necessárias para a aplicação NodeJs

  spotmusic-backoffice:
    build:
      context: ./spotmusic-backoffice
      dockerfile: music-admin-web.Dockerfile
    ports:
      - "3002:3000"
    # Caso necessário, adicione outras configurações necessárias para a aplicação ReactJS

  spotmusic-backoffice-bff:
    build:
      context: ./spotmusic-backoffice
      dockerfile: music-admin-bff.Dockerfile
    ports:
      - "3003:3000"
    # Caso necessário, adicione outras configurações necessárias para a aplicação ReactJS

  spotmusic-mobile:
    build:
      context: ./spotmusic-mobile
    # Caso necessário, Adicione outras configurações necessárias para a aplicação React Native

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-tier

  redpanda:
    image: vectorized/redpanda:latest
    ports:
      - "9092:9092" 
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-tier

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example_password
    volumes:
      - mysql-data:/data/db
    networks:
      - app-tier

  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_ERLANG_COOKIE=mqadmin
      - RABBITMQ_DEFAULT_USER=farlley_ferreira
      - RABBITMQ_DEFAULT_PASS=mstemplate123
      - CLUSTERED=true
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    networks:
      - app-tier

  # mongo:
  #   image: "mongo:latest"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: mstemplate123
  #     MONGO_INITDB_DATABASE: ms-template
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data_container:/data/db
  #   networks:
  #     - app-tier
  
  keycloak:
    image: jboss/keycloak:6.0.1
    hostname: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: h2
      DB_DATABASE: keycloak
      KEYCLOAK_IMPORT: /corp-realm.json
    volumes:
      - ./devtools/realms/corp-realm.json:/tmp/corp-realm.json
    ports:
      - 8080:8080
    expose:
      - 8080

volumes:
  redis-data:
  mongodb_data_container:
  mysql-data:

networks:
  app-tier:
    driver: bridge